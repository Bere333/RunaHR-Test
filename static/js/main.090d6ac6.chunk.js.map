{"version":3,"sources":["views/Home/img/cme_sun.gif","actions/actionTypes.js","reducers/results.js","reducers/data.js","store.js","views/Utils/Navbar/Navbar.js","actions/getResults.js","components/BarSearch.js","constants/url.js","components/ShowData.js","actions/getdata.js","components/AddSearch.js","views/View-Data/Search.js","App.js","views/Home/Home.js","components/root.js","serviceWorker.js","index.js"],"names":["module","exports","GET_DATA","defaultState","initialState","list","createStore","combineReducers","results","state","type","payload","data","expRegular","RegExp","filter","a","test","action","Object","assign","routing","routerReducer","applyMiddleware","thunk","Navbar","className","to","getResults","text","BarSearch","props","onChangeInput","bind","this","setState","placeholder","onChange","Component","mapDispatchToProps","connect","url","ShowData","dispatch","getState","axios","get","then","response","map","x","key","associatedCMEID","catalog","latitude","longitude","speed","time21_5","note","isEmpty","renderdata","AddSearch","length","id","Search","App","Home","src","ImgGif","alt","Root","store","component","basename","process","exact","path","Boolean","window","location","hostname","match","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.090d6ac6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cme_sun.0cc0a798.gif\";","export const ADD_SEARCH = \"ADD_SEARCH\";\nexport const ADD_SUGGESTIONS = \"ADD_SUGGESTIONS\";\nexport const CURRENT_ITEM =\"CURRENT_ITEM\"\nexport const DATA_REQUEST = \"DATA_REQUEST\";\nexport const DATA_SUCCESS = \"DATA_SUCCESS\";\nexport const DATA_FAILURE = \"DATA_FAILURE\";\nexport const GET_DATA = \"GET_DATA\"\n","import {ADD_SEARCH} from '../actions/actionTypes';\n//import {data} from '../data/Data'\n\n\n\n//const data = [{id:1, name:'estela'},{id:2, name:'sofia'}]\nconst defaultState = [];//si se coloca el array de la data, se mostrará por default toda la data\n\nexport default function (state = defaultState, { type, payload, data }) {\n    switch (type){\n      case ADD_SEARCH:{\n        if (!payload) {\n          return [];\n      }\n        const expRegular = new RegExp(`^${payload}`, 'i')\n        \n          return data.filter(a=>expRegular.test(a.type))\n      }\n      default:\n        return state\n    } \n}","import { GET_DATA } from '../actions/actionTypes'\n\nconst initialState = {\n    list: []\n}\n\nexport function showData(state = initialState, action) {\n    \n    switch (action.type) {\n        case GET_DATA:\n            return Object.assign({}, state, {list: action.payload})\n        default:\n            return state \n    }\n    \n}","import { combineReducers, createStore, applyMiddleware} from 'redux';\nimport results from './reducers/results';\nimport {showData} from './reducers/data';\nimport thunk from 'redux-thunk';\n\n\n\nimport { routerReducer } from 'react-router-redux';\n\nexport default createStore(combineReducers({\n    results,\n    data:showData,\n    routing: routerReducer,\n}), applyMiddleware(thunk));","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../Style.scss'\n\nfunction Navbar() {\n  \n    return (\n        <nav>\n            <ul className=\"list-nav\">\n                <Link to=\"/\"><lo className=\"item-list\">INICIO</lo></Link>\n                <Link to=\"/search\"><lo className=\"item-list\">BUSCAR CMEs</lo></Link>\n            </ul>\n        </nav>\n    )}\n\nexport default Navbar;","//Accion creator para ir a resultados\nimport  {ADD_SEARCH} from './actionTypes';\n\nconst getResults = (text, data )=> {\n    return{\n        type: ADD_SEARCH,\n        payload:text,\n        data:data\n    };\n}\n\nexport default getResults;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../views/View-Data/Search.scss';\nimport getResults from '../actions/getResults';\n\nclass BarSearch extends Component{\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            text: '',\n        };\n\n        this.onChangeInput = this.onChangeInput.bind(this);\n    }\n\n    onChangeInput(text) {\n        const {\n            getResults\n        } = this.props;\n\n        this.setState({ text });\n\n        getResults(text);\n\n        \n    }\n\n    render(){\n        const {\n            text,\n        } = this.state;\n        return(\n            <div>\n                {/* <button className=\"btn-search\">\n                            <i className=\"fas fa-search\"></i>\n                    </button> */}\n                    <input \n                        placeholder=\"🔍 Buscar por año, velocidad o ángulo de la CME\" \n                        className=\"input-search\"\n                        text={text}\n                        onChange={this.onChangeInput}\n                      \n                    />\n\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    getResults\n};\n\nexport default connect(null, mapDispatchToProps)(BarSearch);\n","export const url = 'https://api.nasa.gov/DONKI/CMEAnalysis?startDate=2016-09-01&endDate=2019-09-30&catalog=ALL&api_key=1qKDxv55zICsKKnsPKcTHW35m6dROjKl3lYdyxal'\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport '../views/View-Data/Search.scss';\nimport {getData} from '../actions/getdata'\n//import getResults from '../actions/getResults';\n\nclass ShowData extends Component{\n    componentDidMount() {\n        this.props.dispatch(getData())\n      }\n      renderdata() {\n        return this.props.data.map((x) => {\n          return (\n              \n            <div key={x.associatedCMEID} className=\"box-cme\">\n                <h1 key={x.associatedCMEID}>Tipo: {x.type}</h1>\n                <p>\n                    Catálogo: {x.catalog} <br></br>\n                    Latitud: {x.latitude} <br></br>\n                    Longitud: {x.longitude}<br></br>\n                    Velocidad: {x.speed}<br></br>\n                    Fecha: {x.time21_5}<br></br>\n                    Notas: {x.note}<br></br>\n                </p>\n            </div> \n              \n          )\n        })\n      }\n     \n    render(){\n        const isEmpty =  this.props.data === 0;\n        return(\n            <Fragment>\n                <div className=\"box-all\">\n                {isEmpty?<h1>Cargando resultados <i className=\"fas fa-spinner fa-pulse\"></i></h1>: this.renderdata()}\n\n                </div>\n\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      data: state.data.list\n    }\n  }\n  const mapDispatchToProps = dispatch => ({\n    dispatch                \n })\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(ShowData)","import axios from 'axios'\nimport {url} from '../constants/url'\nimport {GET_DATA} from './actionTypes'\n\n\nexport function getData() {\n    \n    return (dispatch, getState) => {\n        axios.get(url)\n            .then((response) => {\n                dispatch( { \n                    type: GET_DATA, \n                    payload: response.data \n                } ) \n            }) \n            \n    }\n    \n} ","import React, {Fragment} from 'react';\nimport BarSearch from '../components/BarSearch';\nimport '../views/View-Data/Search.scss';\nimport ShowData from '../components/ShowData';\n//import { connect } from \"react-redux\";\n//import { addSearch } from '../actions/actions';\n//import {loadData} from '../actions/actionCreators';\n//import {loadSuggestions} from '../actions/getSuggestions'\n\nfunction AddSearch(props){\n  const {\n  //   // text,\n  //   // onChangeInput,\n    results\n  } = props\n  \n const isEmpty = results.length === 0;\n      return (\n        <Fragment>\n          <div className=\"box-target\">\n            <div>\n                <BarSearch/>\n            </div>\n            <div className=\"box-result\">\n              {isEmpty?<h1>Cargando resultados <i className=\"fas fa-spinner fa-pulse\"></i></h1>:results.map(x=>\n                <div\n                key={x.associatedCMEID}\n                className=\"target-info\"\n                >\n                      <h1 key={x.associatedCMEID}>Nombre: {x.note}</h1>\n                      <p className=\"p-text\">ID: {x.id}</p>\n                </div>\n              )}\n            </div>\n            <ShowData />\n          </div>\n        </Fragment>\n\n      )\n    }\n\n  \n    export default AddSearch;\n\n\n\n","import React, { Component } from 'react';\nimport './Search.scss';\nimport { connect } from \"react-redux\";\n//import getSuggestions from '../../actions/getSuggestions';\n//import getResults from '../../actions/getResults'\n\nimport Navbar from '../Utils/Navbar/Navbar';\nimport AddSearch from '../../components/AddSearch';\n\n\n\n\nclass Search extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            \n        }\n       //\n    }\n    // onChangeInput (text){\n    //     this.setState({text})\n    //     this.props.getResults(text)\n    //}\n    render() {\n        const {results} = this.props;\n        //const {text} = this.state;\n        \n        //console.log(results);\n        //console.log(text);\n        \n        \n    return (\n        <section className=\"section-search\">\n            <div>\n                <Navbar/>\n            </div>\n            \n            <div className=\"box-search\">\n                <AddSearch\n                    results={results}\n                    \n                   \n                ></AddSearch>\n            </div>\n            <div className=\"box-cmes\">\n\n            </div>\n           \n           \n        </section>\n    )\n}}\n\nconst mapStateToProps = state =>{\n    return{\n        results: state.results\n    }\n}\n\nexport default connect(mapStateToProps, null)(Search);\n\n","import React from 'react';\nimport './App.css';\n\n\nimport Search from './views/View-Data/Search'\n\nfunction App() {\n  return (\n    <Search></Search>\n\n  );\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport './Home.scss';\n\nimport Navbar from '../Utils/Navbar/Navbar'\nimport ImgGif from './img/cme_sun.gif'\n\nclass Home extends Component {\n    render() {\n    return (\n      <section className=\"home-section\">\n        <div>\n          <Navbar/>\n        </div>\n        <div className=\"box-home\">\n            <p className=\"text-home\">\n             ¡Bienvenid@!, aquí podrás aprender sobre las<br></br>\n             Coronal Mass Ejection conocidas hasta la fecha <br></br>\n             y obtenidas gracias a la NASA. Se pueden consultar <br></br>\n             por fecha, velocidad y más.<br></br><br></br>\n             Pero ¿Qué es una CME?...es una onda formada por<br></br>\n             materia y radiación electromagnética proveniente<br></br>\n             del Sol, que va más allá de su superficie. \n             </p>\n          \n            <img src={ImgGif} alt=\"Coronal Mass Ejection\" className=\"img-cme\"></img>\n        </div>\n      </section>\n    );\n  }\n}\n  \n  export default Home;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Provider } from 'react-redux'\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport App from '../App';\nimport Home from '../views/Home/Home';\nimport Search from '../views/View-Data/Search'\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <Router component={App} basename={process.env.PUBLIC_URL}>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/search\" component={Search}/>\n    </Router>\n  </Provider>\n)\nRoot.propTypes = {\n  store: PropTypes.object.isRequired\n}\nexport default Root","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport './index.css';\n\nimport store from './store';\nimport Root from './components/root'\nimport { render } from 'react-dom'\n\nimport * as serviceWorker from './serviceWorker';\n\nrender(<Root store={store} />, document.getElementById('root'))\nserviceWorker.unregister();\n"],"sourceRoot":""}